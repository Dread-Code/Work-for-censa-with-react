{"version":3,"sources":["components/AddCategory.js","helpers/fetchApi.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","handleInputChange","fetchApi","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,UAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAKd,2BACIO,KAAO,OACPC,MAAUT,EACVU,SAAa,SAACP,IAhBC,SAACA,GACxBF,EAAcE,EAAEQ,OAAOF,OAeMG,CAAkBT,Q,uBCvB1CU,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCF,EADlC,+DAEDG,MAAMD,GAFL,cAEdE,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QARlB,kBAWbK,GAXa,4CAAH,sDCERO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACrC,OACI,yBAAKa,UAAY,0CACb,yBAAKC,IAAQd,EAAMe,IAAQN,MCD1BO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEnB,IAEEoB,EDb2BK,CAAazB,GAAjCY,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAGtB,OACI,oCACI,wBAAIJ,UAAY,qCAAsCf,GACpDmB,GAAW,uBAAGJ,UAAY,oCAAf,gBACb,yBAAKA,UAAY,aAETH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACND,UEbpBkB,EAAe,WAExB,IAF8B,EAIM1C,mBAFrB,CAAC,cAFc,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAM9B,OACE,6BACE,+CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAA,SAAYA,EACZ0B,IAAO1B,U,MChB3B6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.0b44c412.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"Buscar\");\r\n\r\n    const  handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cat => [ inputValue, ...cat]);\r\n            setinputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value =  {inputValue}\r\n                onChange = { (e) => {handleInputChange(e)}}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired\r\n}\r\n","export const fetchApi = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=gneBqGuZitZZQshUekBoAr6KF4Bg82Zy`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }))\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src = { url } alt = { title}></img>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className = \"animate__animated animate__flash\"> Cargando...</p> }\r\n            <div className = \"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                            // pasa la img desestructurada \r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchApi } from '../helpers/fetchApi'\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        fetchApi(category)\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    let programs = ['One Punch'];\r\n\r\n    const [categories, setCategories] = useState(programs);\r\n\r\n    return (\r\n      <div>\r\n        <h2> Gif Expert App</h2>\r\n        <AddCategory setCategories = { setCategories }/>\r\n        <hr/>\r\n        <ol>\r\n            {\r\n                categories.map(category =>(\r\n                    <GifGrid \r\n                    category = {category}\r\n                    key = {category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n      </div>\r\n    )\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n\n// GifExpertApp\n"],"sourceRoot":""}